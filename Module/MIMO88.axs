MODULE_NAME='MIMO88'(DEV BRAND_MODEL_vdv_Device, DEV BRAND_MODEL_Client_Device)

(***********************************************************)
(***********************************************************)
(*  FILE_LAST_MODIFIED_ON: 04/04/2006  AT: 11:33:16        *)
(***********************************************************)
(* System Type : NetLinx                                   *)
(***********************************************************)
(* REV HISTORY:                                            *)
(***********************************************************)
(*
    $History: $
*)    
(***********************************************************)
(*          DEVICE NUMBER DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_DEVICE


(***********************************************************)
(*               CONSTANT DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_CONSTANT

LONG BRAND_MODEL_IP_PORT=5800
INTEGER BRAND_MODEL_TCP_MODE=IP_UDP_2WAY
INTEGER BRAND_MODEL_RECONNECT_TIME=30

BRAND_MODEL_DELIMETER[] = {$0A}
TL_ID_HEARTBEAT=1
LONG TL_ARRAY_HEARTBEAT[]={4000,4000}

CHAR HEARTBEAT_STRING[]={'SYSTEM PONG'}
CHAR HEARTBEAT_RESPONSE[]={'SYSTEM PING'}

(***********************************************************)
(*              DATA TYPE DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_TYPE

(***********************************************************)
(*               VARIABLE DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_VARIABLE

VOLATILE CHAR BRAND_MODEL_IP_ADDR[100] = '172.16.61.12'

VOLATILE CHAR BRAND_MODEL_CONNECTED
VOLATILE CHAR BRAND_MODEL_TALKING
VOLATILE CHAR BRAND_MODEL_FLAG

VOLATILE CHAR BRAND_MODEL_DEBUG = 0

VOLATILE CHAR BRAND_MODEL_BUFF[255]
VOLATILE CHAR BRAND_MODEL_vdv_BUFF[255]
VOLATILE CHAR BRAND_MODEL_MSG[255]
VOLATILE CHAR BRAND_MODEL_LAST_MSG_SENT[255]
VOLATILE CHAR BRAND_MODEL_MSG_RECEIVED[255]
VOLATILE CHAR BRAND_MODEL_PACKET[50]

VOLATILE CHAR IDX


VOLATILE CHAR INFO_NAME[20]
VOLATILE CHAR INFO_MODEL[20]
VOLATILE CHAR INFO_VERSION[20]
VOLATILE CHAR INFO_MAC[20]

(***********************************************************)
(*               LATCHING DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_LATCHING

(***********************************************************)
(*       MUTUALLY EXCLUSIVE DEFINITIONS GO BELOW           *)
(***********************************************************)
DEFINE_MUTUALLY_EXCLUSIVE

(***********************************************************)
(*        SUBROUTINE/FUNCTION DEFINITIONS GO BELOW         *)
(***********************************************************)
(* EXAMPLE: DEFINE_FUNCTION <RETURN_TYPE> <NAME> (<PARAMETERS>) *)
(* EXAMPLE: DEFINE_CALL '<NAME>' (<PARAMETERS>) *)

DEFINE_CALL 'BRAND_MODEL_APERTURA_PORTA'
{
    IF (LENGTH_ARRAY(BRAND_MODEL_IP_ADDR) > 0)
    {
	IF (BRAND_MODEL_Client_Device.NUMBER == 0)
	{
	IF (NOT BRAND_MODEL_CONNECTED)
	    IP_CLIENT_OPEN(BRAND_MODEL_Client_Device.PORT,BRAND_MODEL_IP_ADDR,BRAND_MODEL_IP_PORT,BRAND_MODEL_TCP_MODE)
	
	IF (BRAND_MODEL_DEBUG)
	    SEND_STRING 0:1:0,'IP BRAND_MODEL_Client_Device Connection --> Open BRAND_MODEL_IP_PORT'
	}
    }
    ELSE IF (BRAND_MODEL_DEBUG){
	SEND_STRING 0,"'MIMO88, IP NOT SET'"
    }
}

DEFINE_CALL 'BRAND_MODEL_CHIUSURA_PORTA'
{
    IF (BRAND_MODEL_Client_Device.NUMBER == 0)
    {
	IF (BRAND_MODEL_CONNECTED)
	    IP_CLIENT_CLOSE (BRAND_MODEL_Client_Device.PORT)
    
	IF (BRAND_MODEL_DEBUG)
	    SEND_STRING 0:1:0,'IP BRAND_MODEL_Client_Device Connection --> Close BRAND_MODEL_IP_PORT'
    }
}

DEFINE_CALL 'SYSTEM_CONNECT'()
{
    CALL 'BRAND_MODEL_SEND_STRING' ('SYSTEM DISCONNECT')
    WAIT 10 CALL 'BRAND_MODEL_SEND_STRING' ('SYSTEM CONNECT PINGPONG')
}

DEFINE_FUNCTION CHAR TROVATO_MESSAGGIO()
LOCAL_VAR
CHAR RESULT
{
    ON[RESULT]
    RETURN RESULT
}

DEFINE_CALL 'BRAND_MODEL_INTERPRETA_MESSAGGIO'(CHAR TXT[])
{
    STACK_VAR INTEGER TEMP, TEMP2
    OFF[BRAND_MODEL_FLAG]
    CANCEL_WAIT 'DELAY_BRAND_MODEL_FLAG_TALKING'
    ON[BRAND_MODEL_TALKING]
    
    //REMOVE LAST CHAR ($0A)
    SET_LENGTH_ARRAY(TXT,LENGTH_ARRAY(TXT)-1)
    
    SELECT
    {	
	ACTIVE (FIND_STRING(TXT,"'DATA INFO_NAME '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA INFO_NAME '",1)
	    INFO_NAME = TXT
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - NAME: ', INFO_NAME"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA INFO_MODEL '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA INFO_MODEL '",1)
	    INFO_MODEL = TXT
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - MODEL: ', INFO_MODEL"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA INFO_VERSION '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA INFO_VERSION '",1)
	    INFO_VERSION = TXT
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - VERSION: ', INFO_VERSION"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA INFO_MAC '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA INFO_MAC '",1)
	    INFO_MAC = TXT
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - MAC_ADDRESS: ', INFO_MAC"
	    SEND_STRING BRAND_MODEL_vdv_Device,"'CONNECTED: ',INFO_NAME, ' - ',INFO_MODEL, ' - ',INFO_VERSION, ' - ',INFO_MAC"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA ILEVEL '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA ILEVEL '",1)
	    TEMP = ATOI(REMOVE_STRING(TXT,' ',1))
	    TEMP2 = ATOI(TXT)
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - INPUT: ', ITOA(TEMP), ' , LEVEL: ',ITOA(TEMP2)"
	    SEND_STRING BRAND_MODEL_vdv_Device,"'INPUT_LEVEL=', ITOA(TEMP), ':',ITOA(TEMP2)"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA OLEVEL '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA OLEVEL '",1)
	    TEMP = ATOI(REMOVE_STRING(TXT,' ',1))
	    TEMP2 = ATOI(TXT)
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - OUTPUT: ', ITOA(TEMP), ' , LEVEL: ',ITOA(TEMP2)"
	    SEND_STRING BRAND_MODEL_vdv_Device,"'OUTPUT_LEVEL=', ITOA(TEMP), ':',ITOA(TEMP2)"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA IMUTE '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA IMUTE '",1)
	    TEMP = ATOI(REMOVE_STRING(TXT,' ',1))
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - OUTPUT: ', ITOA(TEMP), ' , MUTE: ',TXT"
	    SEND_STRING BRAND_MODEL_vdv_Device,"'INPUT_MUTE=', ITOA(TEMP), ':',TXT"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA OMUTE '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA OMUTE '",1)
	    TEMP = ATOI(REMOVE_STRING(TXT,' ',1))
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - OUTPUT: ', ITOA(TEMP), ' , MUTE: ',TXT"
	    SEND_STRING BRAND_MODEL_vdv_Device,"'OUTPUT_MUTE=', ITOA(TEMP), ':',TXT"
	}
	ACTIVE (FIND_STRING(TXT,"'DATA XMUTE '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA XMUTE '",1)
	    TEMP = ATOI(REMOVE_STRING(TXT,' ',1))
	    TEMP2 = ATOI(REMOVE_STRING(TXT,' ',1))
	    IF (FIND_STRING(TXT,'YES',1))
	    {
		IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - CROSS OFF: IN ', ITOA(TEMP), ' , OUT: ',ITOA(TEMP2)"
		SEND_STRING BRAND_MODEL_vdv_Device,"'CROSS_OFF=', ITOA(TEMP), ':',ITOA(TEMP2)"
	    }
	    ELSE
	    {
		IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - CROSS ON: IN ', ITOA(TEMP), ' , OUT: ',ITOA(TEMP2)"
		SEND_STRING BRAND_MODEL_vdv_Device,"'CROSS_ON=', ITOA(TEMP), ':',ITOA(TEMP2)"
	    }
	}
	ACTIVE (FIND_STRING(TXT,"'DATA PRESET '",1)) :
	{
	    REMOVE_STRING(TXT,"'DATA PRESET '",1)
	    SEND_STRING BRAND_MODEL_vdv_Device,"'PRESET=',TXT"
	}
	ACTIVE (FIND_STRING(TXT,"HEARTBEAT_RESPONSE",1)) :
	{
	    //SEND_STRING BRAND_MODEL_vdv_Device,"'MIMO88 - HEARTBEAT'"
	    //IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - HEARTBEAT'"
	}
	ACTIVE (FIND_STRING(TXT,"'ERROR 9 '",1)) :
	{
	    REMOVE_STRING(TXT,"'ERROR 9 '",1)
	    SEND_STRING BRAND_MODEL_vdv_Device,"'ERROR=',TXT"
	    //DISCONNECTED, RIFACCIAMO IL CONNECT? POI LO PROVIAMO SUBITO
	    CALL 'SYSTEM_CONNECT'()
	}
	ACTIVE (1):
	{
	    //CLEAR BUFFER?!?!
	    //SEND_STRING BRAND_MODEL_vdv_Device,"'MIMO88 - UNKNOWN STRING RECEIVED! - ', TXT"
	    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 - UNKNOWN STRING RECEIVED! - ', TXT"
	    //CLEAR_BUFFER BRAND_MODEL_BUFF
	}
    }
}

DEFINE_CALL 'RECALL_PRESET'(CHAR PRESET[])
{
    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 RECALL_PRESET ', PRESET"
    CALL 'BRAND_MODEL_SEND_STRING' ("'SET PRESET ',PRESET") 
    SEND_STRING BRAND_MODEL_vdv_Device,"'PRESET=',PRESET"
}

DEFINE_CALL 'SET_CROSS_ON'(CHAR _IN[], CHAR _OUT[])
{
    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 SET_CROSS_ON ',_IN,' - ',_OUT"
    CALL 'BRAND_MODEL_SEND_STRING' ("'SET XMUTE ',_IN,' ',_OUT,' NO'")
    CALL 'BRAND_MODEL_SEND_STRING' ("'GET XMUTE ',_IN,' ',_OUT")
}

DEFINE_CALL 'SET_CROSS_OFF'(CHAR _IN[], CHAR _OUT[])
{
    IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 SET_CROSS_OFF ',_IN,' - ',_OUT"
    CALL 'BRAND_MODEL_SEND_STRING' ("'SET XMUTE ',_IN,' ',_OUT,' YES'")
    CALL 'BRAND_MODEL_SEND_STRING' ("'GET XMUTE ',_IN,' ',_OUT")
}


DEFINE_CALL 'MUTE_IN'(CHAR INPUT[], INTEGER STATO)
{
    IF (STATO)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 MUTE_IN ', INPUT"
	CALL 'BRAND_MODEL_SEND_STRING' ("'SET IMUTE ',INPUT, ' YES'")
	CALL 'BRAND_MODEL_SEND_STRING' ("'GET IMUTE ',INPUT")
    }
    ELSE
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 UN_MUTE_IN ', INPUT"
	CALL 'BRAND_MODEL_SEND_STRING' ("'SET IMUTE ',INPUT, ' NO'")
	CALL 'BRAND_MODEL_SEND_STRING' ("'GET IMUTE ',INPUT")
    }
}

DEFINE_CALL 'MUTE_OUT'(CHAR OUTPUT[], INTEGER STATO)
{
    IF (STATO)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 MUTE_OUT ', OUTPUT"
	CALL 'BRAND_MODEL_SEND_STRING' ("'SET OMUTE ',OUTPUT, ' YES'")
	CALL 'BRAND_MODEL_SEND_STRING' ("'GET OMUTE ',OUTPUT")
    }
    ELSE
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 UN_MUTE_OUT ', OUTPUT"
	CALL 'BRAND_MODEL_SEND_STRING' ("'SET OMUTE ',OUTPUT, ' NO'")
	CALL 'BRAND_MODEL_SEND_STRING' ("'GET OMUTE ',OUTPUT")
    }
}


DEFINE_CALL 'INC_LEVEL'(CHAR CH[], INTEGER TYPE) // 1=INPUT  2=OUTPUT
{
    IF (TYPE == 1)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 INC_LEVEL INPUT CH ',CH"
	CALL 'BRAND_MODEL_SEND_STRING' ("'INC ILEVEL ', CH, ' 2'")
    }
    ELSE IF (TYPE == 2)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 INC_LEVEL OUTPUT CH ',CH"
	CALL 'BRAND_MODEL_SEND_STRING' ("'INC OLEVEL ',CH, ' 2'")
    }
}

DEFINE_CALL 'DEC_LEVEL'(CHAR CH[], INTEGER TYPE) // 1=INPUT  2=OUTPUT
{
    IF (TYPE == 1)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 DEC_LEVEL INPUT CH ',CH"
	CALL 'BRAND_MODEL_SEND_STRING' ("'DEC ILEVEL ',CH, ' 2'")
    }
    ELSE IF (TYPE == 2)
    {
	IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 DEC_LEVEL OUTPUT CH ',CH"
	CALL 'BRAND_MODEL_SEND_STRING' ("'DEC OLEVEL ',CH, ' 2'")
    }
}


DEFINE_CALL 'BRAND_MODEL_SEND_STRING' (CHAR TXT[])
LOCAL_VAR
CHAR CHECKSUM
CHAR BYTE
INTEGER	 COUNT
{
    BRAND_MODEL_MSG="TXT,$0A"

    IF (BRAND_MODEL_CONNECTED)
    {
    
	BRAND_MODEL_LAST_MSG_SENT="BRAND_MODEL_MSG"
	SEND_STRING BRAND_MODEL_Client_Device,"BRAND_MODEL_LAST_MSG_SENT"
    
	IF (BRAND_MODEL_DEBUG)
	{
	    SEND_STRING 0:1:0,"'IP BRAND_MODEL_Client_Device Sending=',BRAND_MODEL_LAST_MSG_SENT"
	    //SEND_STRING 0:1:0,"'IP BRAND_MODEL_Client_Device Sending=',EXPLODE_HEX_STRING(BRAND_MODEL_LAST_MSG_SENT)"
	}
	ON[BRAND_MODEL_FLAG]
	CANCEL_WAIT 'DELAY_BRAND_MODEL_FLAG_TALKING'
	WAIT 10 'DELAY_BRAND_MODEL_FLAG_TALKING'
	{
	    IF (BRAND_MODEL_FLAG)
	    {
		OFF[BRAND_MODEL_TALKING]
	    }
	}
    }
}

DEFINE_FUNCTION CHAR[255] FIND_PARAMETERS(CHAR TXT[], CHAR DELIMIT[], INTEGER POS)
LOCAL_VAR
CHAR RESULT[255]
{
    RESULT=REMOVE_STRING(TXT,"DELIMIT",POS)
    RETURN RESULT
}

DEFINE_FUNCTION CHAR[355] EXPLODE_HEX_STRING(CHAR TXT[])
LOCAL_VAR
CHAR RESULT[355]
{
    RESULT=""
    FOR (IDX=1;IDX<=LENGTH_ARRAY(TXT);IDX++)
    {
	RESULT="RESULT,'$',FORMAT('%02x',TXT[IDX]),','"
    }
    
    RETURN RESULT
}

(***********************************************************)
(*                STARTUP CODE GOES BELOW                  *)
(***********************************************************)
DEFINE_START

CREATE_BUFFER BRAND_MODEL_Client_Device,BRAND_MODEL_BUFF

REBUILD_EVENT()

TIMELINE_CREATE (TL_ID_HEARTBEAT,TL_ARRAY_HEARTBEAT,2,TIMELINE_RELATIVE,TIMELINE_REPEAT)

(***********************************************************)
(*                THE EVENTS GO BELOW                      *)
(***********************************************************)
DEFINE_EVENT

DATA_EVENT[BRAND_MODEL_Client_Device]
    {
    ONLINE:
    {
	ON[BRAND_MODEL_CONNECTED]
	
	SEND_STRING BRAND_MODEL_vdv_Device,"'DEVICE_ONLINE'"
	
	IF (BRAND_MODEL_DEBUG)
	    SEND_STRING 0:1:0,'IP BRAND_MODEL_Client_Device Connection --> Online'
	
	CALL 'SYSTEM_CONNECT'()
	
	IF (BRAND_MODEL_Client_Device.NUMBER)
	{
	    // CONFIGURAZIONI SERIALI
	    SEND_COMMAND DATA.DEVICE,"'SET BAUD 115200,N,8,1 485 DISABLE'"
	    SEND_COMMAND DATA.DEVICE,"'HSOFF'"
	    SEND_COMMAND DATA.DEVICE,"'XOFF'"
	}
    }
    
    OFFLINE:
    {
	OFF[BRAND_MODEL_CONNECTED]
	SEND_STRING BRAND_MODEL_vdv_Device,"'DEVICE_OFFLINE'"
	
	
	IF (BRAND_MODEL_DEBUG)
	    SEND_STRING 0:1:0,'IP BRAND_MODEL_Client_Device Connection --> Offline'
	    
	IF ((BRAND_MODEL_Client_Device.NUMBER == 0) AND (BRAND_MODEL_RECONNECT_TIME))
	{
	    CANCEL_WAIT 'BRAND_MODEL_DELAY_RECONNECT'
	    WAIT BRAND_MODEL_RECONNECT_TIME 'BRAND_MODEL_DELAY_RECONNECT'
	    {
		CALL 'BRAND_MODEL_APERTURA_PORTA'
	    }
	}
    }
    
    ONERROR:
    {
	IF (BRAND_MODEL_Client_Device.NUMBER == 0)
	{
	    IF (BRAND_MODEL_DEBUG)
		SEND_STRING 0:1:0,"'IP BRAND_MODEL_Client_Device Connection --> Socket Error ',ITOA(DATA.NUMBER)"

	    IF (DATA.NUMBER == 14)
	    {
		ON[BRAND_MODEL_CONNECTED]
	    }
	    
	    SWITCH (DATA.NUMBER)
	    {
		CASE  2 : 
		CASE  4 : 
		CASE  6 : 
		CASE  7 : 
		CASE  8 : 
		CASE 13 : 
		CASE 14 : 
		{
		    CANCEL_WAIT 'BRAND_MODEL_DELAY_RECONNECT'
		    CALL 'BRAND_MODEL_CHIUSURA_PORTA'
		    IF (BRAND_MODEL_RECONNECT_TIME)
		    {
			WAIT BRAND_MODEL_RECONNECT_TIME 'BRAND_MODEL_DELAY_RECONNECT'
			CALL 'BRAND_MODEL_APERTURA_PORTA'
		    }
		}
		CASE  9 : 
		CASE 17 :
		{
		    OFF[BRAND_MODEL_CONNECTED]
		    CANCEL_WAIT 'BRAND_MODEL_DELAY_RECONNECT'
		    IF (BRAND_MODEL_RECONNECT_TIME)
		    {
			WAIT BRAND_MODEL_RECONNECT_TIME 'BRAND_MODEL_DELAY_RECONNECT'
			CALL 'BRAND_MODEL_APERTURA_PORTA'
		    }
		}
	    }
	}
    }
    STRING:
    {
	WHILE (FIND_STRING(BRAND_MODEL_BUFF,BRAND_MODEL_DELIMETER,1))
	{
	    IF (BRAND_MODEL_DEBUG){
		SEND_STRING 0:1:0,"'IP BRAND_MODEL_Client_Device Receiving=',BRAND_MODEL_BUFF"
		//SEND_STRING 0:1:0,"'IP BRAND_MODEL_Client_Device Receiving=',EXPLODE_HEX_STRING(BRAND_MODEL_BUFF)"
	    }
	    CALL 'BRAND_MODEL_INTERPRETA_MESSAGGIO'(REMOVE_STRING(BRAND_MODEL_BUFF,BRAND_MODEL_DELIMETER,1))
	}
    }
}

DATA_EVENT[BRAND_MODEL_vdv_Device]
{
    ONLINE:
    {
	IF ((BRAND_MODEL_Client_Device.NUMBER == 0) AND (BRAND_MODEL_Client_Device.PORT <> 0))
	    CALL 'BRAND_MODEL_APERTURA_PORTA'

	/*WAIT 300
	{
	    SEND_COMMAND BRAND_MODEL_vdv_Device,"'REINIT'"
	}*/
    }
    
    COMMAND:
    {
	BRAND_MODEL_vdv_BUFF="DATA.TEXT"
	SELECT
	{
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'IP_ADDRESS='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'IP_ADDRESS='",1)
		BRAND_MODEL_IP_ADDR="BRAND_MODEL_vdv_BUFF"
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'PASSTHRUGH='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'PASSTHRUGH='",1)
		IF (BRAND_MODEL_DEBUG) SEND_STRING 0, "'MIMO88 PASSTHRUGH: ', BRAND_MODEL_vdv_BUFF"
		CALL 'BRAND_MODEL_SEND_STRING' (BRAND_MODEL_vdv_BUFF)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'RECALL_PRESET='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'RECALL_PRESET='",1)
		CALL 'RECALL_PRESET'(BRAND_MODEL_vdv_BUFF)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_ON_IN='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_ON_IN='",1)
		CALL 'MUTE_IN'(BRAND_MODEL_vdv_BUFF,1)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_ON_OUT='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_ON_OUT='",1)
		CALL 'MUTE_OUT'(BRAND_MODEL_vdv_BUFF,1)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_OFF_IN='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_OFF_IN='",1)
		CALL 'MUTE_IN'(BRAND_MODEL_vdv_BUFF,0)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_OFF_OUT='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'MUTE_OFF_OUT='",1)
		CALL 'MUTE_OUT'(BRAND_MODEL_vdv_BUFF,0)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'SET_OLEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'SET_OLEVEL='",1)
		//CALL 'MUTE_OUT'(BRAND_MODEL_vdv_BUFF,0)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'SET_ILEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'SET_ILEVEL='",1)
		//CALL 'MUTE_OUT'(BRAND_MODEL_vdv_BUFF,0)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'INC_OLEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'INC_OLEVEL='",1)
		CALL 'INC_LEVEL'(BRAND_MODEL_vdv_BUFF,2)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'INC_ILEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'INC_ILEVEL='",1)
		CALL 'INC_LEVEL'(BRAND_MODEL_vdv_BUFF,1)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'DEC_OLEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'DEC_OLEVEL='",1)
		CALL 'DEC_LEVEL'(BRAND_MODEL_vdv_BUFF,2)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'DEC_ILEVEL='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'DEC_ILEVEL='",1)
		CALL 'DEC_LEVEL'(BRAND_MODEL_vdv_BUFF,1)
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'SET_CROSS_ON='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'SET_CROSS_ON='",1)
		CALL 'SET_CROSS_ON'(LEFT_STRING(BRAND_MODEL_vdv_BUFF,1),RIGHT_STRING(BRAND_MODEL_vdv_BUFF,1))
	    }
	    ACTIVE (FIND_STRING(BRAND_MODEL_vdv_BUFF,"'SET_CROSS_OFF='",1)) :
	    {
		REMOVE_STRING(BRAND_MODEL_vdv_BUFF,"'SET_CROSS_OFF='",1)
		CALL 'SET_CROSS_OFF'(LEFT_STRING(BRAND_MODEL_vdv_BUFF,1),RIGHT_STRING(BRAND_MODEL_vdv_BUFF,1))
	    }
	    ACTIVE (1) :
	    {
	    SWITCH (BRAND_MODEL_vdv_BUFF)
		{
		CASE 'REINIT':
		    {
		    REBUILD_EVENT()

		    CANCEL_WAIT 'BRAND_MODEL_DELAY_RECONNECT'
		    CALL 'BRAND_MODEL_CHIUSURA_PORTA'
		    IF (BRAND_MODEL_RECONNECT_TIME)
			{
			WAIT BRAND_MODEL_RECONNECT_TIME 'BRAND_MODEL_DELAY_RECONNECT'
			  CALL 'BRAND_MODEL_APERTURA_PORTA'
			}
		    }
		CASE 'DEBUG=ENABLE' : ON[BRAND_MODEL_DEBUG]
		CASE 'DEBUG=DISABLE' : OFF[BRAND_MODEL_DEBUG]
		}
	    }
	}
    }
}

TIMELINE_EVENT[TL_ID_HEARTBEAT]
{
    SWITCH(TIMELINE.SEQUENCE)
    {
	CASE 1:CALL 'BRAND_MODEL_SEND_STRING' ("HEARTBEAT_STRING")
	CASE 2:CALL 'BRAND_MODEL_SEND_STRING' ("HEARTBEAT_STRING")
    }
}

(***********************************************************)
(*            THE ACTUAL PROGRAM GOES BELOW                *)
(***********************************************************)
DEFINE_PROGRAM


(***********************************************************)
(*                     END OF PROGRAM                      *)
(*        DO NOT PUT ANY CODE BELOW THIS COMMENT           *)
(***********************************************************)
